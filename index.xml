<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Longstation</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Longstation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 24 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description>Hello, I am a software engineer. I share my thoughts here.
The name longstation is a neologism made up by me, used by me, as both the title for this blog and my name. I have used this word since I began blogging (I have deleted most of the early posts as many of them are awkward by today&amp;rsquo;s standard).</description>
    </item>
    
    <item>
      <title>Intuition of isZero</title>
      <link>http://localhost:1313/post/intuition-of-iszero/</link>
      <pubDate>Thu, 29 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/intuition-of-iszero/</guid>
      <description>Before reading, make sure you understand how positive integers are represented in lambda calculus.
We want isZero to return true for zero (λ f x. x) and false for all other numbers.
isZero = λ n. n (λ z. false) true  Alternatively, you can write is as:
isZero n = n (λ z. false) true  So what is zero? Zero is λ f x. x, a function that takes two parameters f and x, and return x.</description>
    </item>
    
    <item>
      <title>JNI Library Name on Mac</title>
      <link>http://localhost:1313/post/jni-library-name-mac/</link>
      <pubDate>Fri, 23 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/jni-library-name-mac/</guid>
      <description>If you try a hello world example for JNI programming, it may tell you that you can just use System.loadLibrary(hello); to load a native library (may be C++, may be C, or some other language). Specifically, on Windows, this &amp;ldquo;hello&amp;rdquo; means &amp;ldquo;hello.dll&amp;rdquo;; on Linux or Unix, it means &amp;ldquo;hello.so&amp;rdquo;. I guess Mac is just one of the Unix members, so I have a shared library compiled and named &amp;ldquo;hello.so&amp;rdquo;.
But I got &amp;ldquo;UnsatisfiedLinkError&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Two Ways to Declare A Binary Tree in Haskell</title>
      <link>http://localhost:1313/post/two-ways-to-declare-a-binary-tree-in-haskell/</link>
      <pubDate>Fri, 23 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/two-ways-to-declare-a-binary-tree-in-haskell/</guid>
      <description>I am about to take Professor Jhala&amp;rsquo;s class and now I am learning Haskell. One thing I find interesting is how you can define a recursive data structure in two different ways.
Method 1
data Tree a = Leaf a | Branch (Tree a) (Tree a)  Method 2
data Tree a = EmptyTree | Node a (Tree a) (Tree a)  In short, method 2 is just method 1 with the &amp;ldquo;|&amp;rdquo; moved one left.</description>
    </item>
    
    <item>
      <title>Static Variable Linking Error</title>
      <link>http://localhost:1313/post/static-variable-linking-error/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/static-variable-linking-error/</guid>
      <description>I was working on a side project. It&amp;rsquo;s in C++. Given that I haven&amp;rsquo;t done much in C++, I treat it as an opportunity to learn C++ as the project progresses. I was stuck on a problem for several days. Here is the problem. I have a class variable (named cache) but it&amp;rsquo;s static. When compile, it keeps telling me:
Undefined symbols for architecture x86_64: &amp;quot;H264_Decoder::cache&amp;quot;, referenced from: H264_Decoder::H264_Decoder(void (*)(AVFrame*, AVPacket*, void*), void*) in H264_Decoder.</description>
    </item>
    
    <item>
      <title>Solve Spring Boot Unknown Error</title>
      <link>http://localhost:1313/post/solve-spring-boot-unknown-error/</link>
      <pubDate>Fri, 22 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/solve-spring-boot-unknown-error/</guid>
      <description>I was working on a short Spring Boot project. However, on my computer, no matter what I tried, it couldn&amp;rsquo;t start and gave me &amp;ldquo;unknown error&amp;rdquo;. The following is the error log:
Wrong Spring Boot output: 4:01:54 PM: Executing external task &#39;bootRun&#39;... :compileJava UP-TO-DATE :processResources UP-TO-DATE :classes UP-TO-DATE :findMainClass :bootRun . ____ _ __ _ _ /\\ / ___&#39;_ __ _ _(_)_ __ __ _ \ \ \ \ ( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \ \\/ ___)| |_)| | | | | || (_| | ) ) ) ) &#39; |____| .</description>
    </item>
    
    <item>
      <title>An Infinite GC Problem</title>
      <link>http://localhost:1313/post/an-infinite-gc-problem/</link>
      <pubDate>Tue, 12 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/an-infinite-gc-problem/</guid>
      <description>Recently in work, I encountered an interesting GC (garbage collection) related problem. We have a console like application, when a user logs in, the program loads the corresponding history file so that the user is able to look for &amp;ldquo;recent commands&amp;rdquo;. However, when the history file is very large (say, 200 MB), this loading process triggers GC. This sounds right because the file is very large, reading it all into the memory will create a memory shortage and thus triggers the GC.</description>
    </item>
    
    <item>
      <title>A Benchmark Flaw</title>
      <link>http://localhost:1313/post/a-benchmark-flaw/</link>
      <pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/a-benchmark-flaw/</guid>
      <description>Would declaring a String variable and then using it run faster or just using a String literal run faster? I had this in mind, and made the following test.
public static void main(String[] args) { String a = &amp;quot;kNuZbcI4No&amp;quot;; Path path = Paths.get(&amp;quot;10000.txt&amp;quot;); long start2 = System.currentTimeMillis(); try (Stream&amp;lt;String&amp;gt; lines = Files.lines(path)) { lines.forEach(s -&amp;gt; s.equalsIgnoreCase(&amp;quot;5GxtHQS42y&amp;quot;)); } catch (IOException e) { System.out.println(e); } long end2 = System.currentTimeMillis(); long start1 = System.</description>
    </item>
    
    <item>
      <title>Convert Plaintext to ANKI Decks</title>
      <link>http://localhost:1313/post/convert-plaintext-to-anki-decks/</link>
      <pubDate>Sat, 03 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/convert-plaintext-to-anki-decks/</guid>
      <description>ANKI is a software that uses flash cards to help you memorize stuff, such as improving vocabulary for a foreign languge. I have a vocabulary book in .doc format, and I want to convert it into decks of flash cards that Anki can recongnize.
After some massage, I obtained a text file with the following layout:
word definition1 definition2 word definition1 word definition1 definition2 definition3  Anki accepts several plaintext formats, the one I used, is:</description>
    </item>
    
    <item>
      <title>Numbers in Java</title>
      <link>http://localhost:1313/post/numbers-in-java/</link>
      <pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/numbers-in-java/</guid>
      <description>I encountered a problem where I need to put numbers into a set, and later check whether a number is contained in the set. But since we are using Set&amp;lt;Long&amp;gt;, an idea crossed my mind: will 1 equal to 1? &amp;ndash; If I create two Long object holding the same value, are they consider equal by Set?
Yes. Because the hashcode method is implemeted as follows:
return (int)(value ^ (value &amp;gt;&amp;gt;&amp;gt; 32));  So only the value of that Number object matters, as opposed to the &amp;ldquo;regular&amp;rdquo; implementation:</description>
    </item>
    
    <item>
      <title>JSONP Front &amp; Backend</title>
      <link>http://localhost:1313/post/jsonp-front-and-backend/</link>
      <pubDate>Tue, 22 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/jsonp-front-and-backend/</guid>
      <description>Single Origin Policy It means the elements in cs.columbia.edu can only request resources in its domain or its sub domains, such as clic.cs.columbia.edu. But sometimes a web page on clic.cs.columbia.edu may need to request resources on cs.mit.edu. There are many ways to deal with this problem, but through out my internship project, I found JSONP is the most convenient way.
How to Bypass It? If single origin policy is really the case, why you can see an image in a web page that may be hosted on some other server?</description>
    </item>
    
  </channel>
</rss>